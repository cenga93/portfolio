@import "../constants";

// ----- MEDIA QUERIES -----
@mixin until($width) {
  // until ($tablet), exception for mobile query
  @if ($width == 768) {
    @media (max-width: $width - 1) {
      @content;
    }
  }
  @if ($width != 768) {
    @media (max-width: $width) {
      @content;
    }
  }
}

@mixin from($width) {
  // from ($tablet), exception for tablet query
  @if ($width == 768) {
    @media (min-width: $width) {
      @content;
    }
  }
  @if ($width != 768) {
    @media (min-width: $width + 1) {
      @content;
    }
  }
}

@mixin between($from, $to) {
  @media (min-width: $from) and (max-width: $to) {
    @content;
  }
}

// from 768px to 1024px
@mixin tablet() {
  @include between($tablet, $desktop) {
    @content;
  }
}

// from 1025px to 1200px
@mixin desktop() {
  @include between($desktop + 1, $desktop-large) {
    @content;
  }
}

// from 1201px to 1366px
@mixin desktopLarge() {
  @include between($desktop-large + 1, $wide-screen) {
    @content;
  }
}

// from 1367px
@mixin widescreen() {
  @include from($wide-screen) {
    @content;
  }
}

// ----- CTA -----
@mixin cta($is-light: "") {
  display: inline-block;
  padding: 20px 60px;
  margin: 10px;
  border-radius: $box-radius;
  font-weight: $font-weight-medium;
  text-decoration: none;
  transition: background-color 250ms;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.15);
  font-size: 14px;

  @if $is-light != "outline" {
    background-color: $color-green;
    color: $color-white;

    &:visited {
      color: $color-white;
      background-color: $color-green;
    }

    &:hover {
      background: $color-green-dark;
    }

    &:active {
      color: $color-white;
      background-color: $color-green;
    }
  }

  @if $is-light == "outline-black" {
    background-color: transparent;
    color: $color-typography;
    padding: 10px 35px;
    border: 2px solid $color-green;

    &:visited {
      color: $color-black;
    }
    &:hover {
      background-color: $color-green;
      color: $color-white;
    }


    &:active {
      background-color: transparent;
      color: $color-black;
    }
  }

  @if $is-light == "outline-white" {
    background-color: transparent;
    color: $color-white;
    padding: 10px 35px;
    border: 2px solid $color-green;

    &:visited {
      background-color: transparent;
      color: $color-white;
    }

    &:active {
      background-color: transparent;
      color: $color-white;
    }
    &:hover {
      background: $color-green;
    }
  }
}

// ----- GRID SETTINGS -----
@mixin grid-gap() {
  grid-column-gap: $gutter-mobile;

  @include between($tablet, $desktop) {
    grid-column-gap: $gutter-tablet;
  }

  @include from($desktop) {
    grid-column-gap: $gutter-desktop;
  }
}


@mixin linkWithArrowExtend(
  $arrowColor: $color-black,
  $fontColor: $color-text-base,
  $invert: null
) {

  display: inline-block;
  position: relative;
  //padding-right: 60px;
  color: $color-text-base;
  @if $invert {
    color: $color-white;
    border: 1px solid $color-white;
  }
  font-family: $font-copy;
  text-decoration: none;

  .link-arrow {
    display: inline-block;
    position: absolute;
    left: calc(100% - 55px);
    top: 50%;
    transform: translateY(-50%);
    margin-left: 10px;
    width: 20px;
    height: 1px;
    vertical-align: middle;
    transition: all 0.2s;
    background-color: $arrowColor;
    @if $invert {
      background-color: $color-white;
    }

    &:after {
      content: "";
      display: inline-block;
      position: absolute;
      width: 8px;
      height: 1px;
      right: -1px;
      top: -3px;
      background-color: $arrowColor;
      @if $invert {
        background-color: $color-white;
      }
      transform: rotate(45deg);
    }

    &:before {
      content: "";
      display: inline-block;
      position: absolute;
      right: -1px;
      width: 8px;
      height: 1px;
      top: 3px;
      background-color: $arrowColor;
      @if $invert {
        background-color: $color-white;
      }
      transform: rotate(-45deg);
    }

  }
}
